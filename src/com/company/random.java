package com.company;
import java.io.*;
import static java.lang.System.out;

/**
 * Created by moneg on 05.03.2016.
 */
public class random {

    public static final String sourceFileName= "sourse2.txt";
    public static void main(String[] args) throws IOException {
        RandomAccessFile raf = new RandomAccessFile(sourceFileName,"rw");//обеспечивает чтение и запись данных в любом месте файла.
/*mode – режим открытия файла, может принимать значения ”r”,”rw”,”rws”,”rwd”.
Значения режимов открытия файла:

"r"Открывает файл только по чтению. Запуск любых методов записи данных приведет к выбросу исключения IOException.

"rw"Открывает файл по чтению и записи. Если файл еще не создан, то осуществляется попытка создать его.

"rws"Открывает файл по чтению и записи подобно "rw", и также требует системе при каждом изменении содержимого файла или метаданных синхронно записывать эти изменения на основной носитель.

"rwd"Открывает файл по чтению и записи подобно "rws", но принуждает систему синхронно записывать изменения на основной носитель только при каждом изменении содержимого файла. Если изменяются метаданные, синхронная запись не осуществляется.

long getFilePointer()
Возвращает текущую позицию указателя файла.

int skipBytes(int n)
Осуществляет попытку пропустить n байт. Этот метод может пропустить гораздо меньше байт, возможно даже 0 байт. Подобная ситуация может возникнуть в случае достижения конца файла до того как n байт будет пропущено – это одна из возможностей. Этот метод никогда не выбрасывает EOFException. Возвратится действительное количество пропущенных байтов. Если n отрицательно, то байты не будут пропускаться.
 */

        out.println(raf.length());
        raf.seek(10);//Перемещает указатель файла на pos байтов от начала файла.
        String s=raf.readLine();
        out.println(s);
        raf.seek(raf.length());
        raf.writeUTF("I'll kill YOU!");
        raf.close();

    }
}
